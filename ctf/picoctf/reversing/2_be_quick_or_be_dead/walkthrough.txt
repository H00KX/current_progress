
Can you call stuff without executing the entire program?

https://blog.xdmtk.org/index.php/2018/05/30/basic-reverse-engineering-with-radare2-part-ii/
https://eli.thegreenplace.net/2011/09/06/stack-frame-layout-on-x86-64


be-quick-or-be-dead2

 0x0040074b      55             push rbp       
 0x0040074c      4889e5         mov rbp, rsp   
 0x0040074f      bff7030000     mov edi, 0x3f7 
 0x00400754      e8adffffff     call sym.fib   
 0x00400759      5d             pop rbp        
 0x0040075a      c3             ret 


Speeding up the function by overwriting instructions (mov edi, 0x3f7) to a smaller number to speed execution 
1.	oo+
2.	wa mov edi, 5 @ 0x0040074f

what the program runs after changes:
	Calculating key...
	Done calculating key
	Printing flag:
	^�]�i�x�^�[�P�\�X�]�S�M�K�[�]�a�_�a�_�Z�T�a�W�J��[���W


Its important to keep the original number that gets passed to sym.fib because its the index number for the fibonachi function, 
0x0040074f      bff7030000     mov edi, 0x3f7    
0x00400754      e8adffffff     call sym.fib



I can create a fibonachi series with an index number of 0x3f7, to find the result. Otherwise the program takes too long and exits early. 


Author skips fib function which takes too long, and attempts to manually place input from fib function into program as it would have done without skipping fib`

a little confused to how author knew to place value in eax and not another register

